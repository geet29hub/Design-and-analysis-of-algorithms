#include <stdio.h>
void printArray(int arr[], int size) {
	for (int i = 0; i < size; i++)
		printf("%d ", arr[i]);
	printf("\n");
}

void merge(int arr[], int l, int m, int r, int size) {
	int i, j, k;
	int n1 = m -l +1;
	int n2 = r- m;
	int L[n1], R[n2];
	for (i = 0; i <n1; i++)
		L[i] = arr[l+ i];
	for (j = 0; j <n2; j++)
		R[j] = arr[m +1 +j];
	i =0;
	j =0;
	k =l;
	while (i < n1 && j < n2)
		arr[k++] = (L[i] <= R[j]) ? L[i++] : R[j++];
	while (i < n1)
		arr[k++] = L[i++];
	while (j < n2)
		arr[k++] = R[j++];
	printf("Pass: ");
	for (int x = l; x <= r; x++)
		printf("%d ", arr[x]);
	printf("\n");
}
void mergeSort(int arr[], int l, int r, int size) {
	if (l <r) {
		int m =l + (r-l)/ 2;
		mergeSort(arr,l,m, size);
		mergeSort(arr, m + 1, r, size);
		merge(arr, l, m, r, size);
	}
}

int main() {
	int arr[100], n;
	printf("no of elements: ");
	scanf("%d", &n);
	printf("elements: ");
	for (int i= 0; i< n; i++) 
		scanf("%d", &arr[i]);
	printf("Given array:\n");
	printArray(arr, n);
	mergeSort(arr, 0, n- 1, n);
	printf("Sorted array:\n");
	printArray(arr, n);
return 0;
}


